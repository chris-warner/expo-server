var x="realtime-bpm-processor";var T=`"use strict";(()=>{var x="realtime-bpm-processor";async function p(n,o=.2,e=.95,s=.05){let t=e;do if(t-=s,await n(t))break;while(t>o)}function y(n=.2,o=.95,e=.05){let s={},t=o;do t-=e,s[t.toString()]=[];while(t>n);return s}function A(n=.2,o=.95,e=.05){let s={},t=o;do t-=e,s[t.toString()]=0;while(t>n);return s}function h(){let o=0,e=new Float32Array(0);function s(){o=0,e=new Float32Array(0)}function t(){return o===4096}function a(){s()}return function(r){t()&&a();let l=new Float32Array(e.length+r.length);return l.set(e,0),l.set(r,e.length),e=l,o+=r.length,{isBufferFull:t(),buffer:e,bufferSize:4096}}}function v(n,o,e=0,s=1e4){let t=[],{length:a}=n;for(let r=e;r<a;r+=1)n[r]>o&&(t.push(r),r+=s);return{peaks:t,threshold:o}}async function b(n,o){let e=15,s=!1,t=.2;if(await p(async a=>s?!0:(n[a].length>e&&(s=!0,t=a),!1)),s&&t){let a=w(n[t]),r=C(o,a);return{bpm:V(r),threshold:t}}return{bpm:[],threshold:t}}function V(n,o=5){return n.sort((e,s)=>s.count-e.count).splice(0,o)}function w(n){let o=[];for(let e=0;e<n.length;e++)for(let s=0;s<10;s++){let t=n[e],a=e+s,r=n[a]-t;if(!o.some(i=>i.interval===r?(i.count+=1,i.count):!1)){let i={interval:r,count:1};o.push(i)}}return o}function C(n,o){let e=[];for(let s of o){if(s.interval===0)continue;s.interval=Math.abs(s.interval);let t=60/(s.interval/n);for(;t<90;)t*=2;for(;t>180;)t/=2;if(t=Math.round(t),!e.some(r=>r.tempo===t?(r.count+=s.count,r.count):!1)){let r={tempo:t,count:s.count,confidence:0};e.push(r)}}return e}var d={minValidThreshold:()=>.2,validPeaks:()=>y(),nextIndexPeaks:()=>A(),skipIndexes:()=>1,effectiveBufferTime:()=>0},m=class{constructor(){this.options={continuousAnalysis:!1,stabilizationTime:2e4,muteTimeInIndexes:1e4,debug:!1};this.minValidThreshold=d.minValidThreshold();this.validPeaks=d.validPeaks();this.nextIndexPeaks=d.nextIndexPeaks();this.skipIndexes=d.skipIndexes();this.effectiveBufferTime=d.effectiveBufferTime();this.computedStabilizationTimeInSeconds=0;this.updateComputedValues()}setAsyncConfiguration(o){Object.assign(this.options,o),this.updateComputedValues()}updateComputedValues(){this.computedStabilizationTimeInSeconds=this.options.stabilizationTime/1e3}reset(){this.minValidThreshold=d.minValidThreshold(),this.validPeaks=d.validPeaks(),this.nextIndexPeaks=d.nextIndexPeaks(),this.skipIndexes=d.skipIndexes(),this.effectiveBufferTime=d.effectiveBufferTime()}async clearValidPeaks(o){this.minValidThreshold=Number.parseFloat(o.toFixed(2)),await p(async e=>(e<o&&this.validPeaks[e]!==void 0&&(delete this.validPeaks[e],delete this.nextIndexPeaks[e]),!1))}async analyzeChunck(o,e,s,t){this.options.debug&&t({message:"ANALYZE_CHUNK",data:o}),this.effectiveBufferTime+=s;let a=s*this.skipIndexes,r=a-s;await this.findPeaks(o,s,r,a,t),this.skipIndexes++;let l=await b(this.validPeaks,e),{threshold:i}=l;t({message:"BPM",result:l}),this.minValidThreshold<i&&(t({message:"BPM_STABLE",result:l}),await this.clearValidPeaks(i)),this.options.continuousAnalysis&&this.effectiveBufferTime/e>this.computedStabilizationTimeInSeconds&&(this.reset(),t({message:"ANALYZER_RESETED"}))}async findPeaks(o,e,s,t,a){await p(async r=>{if(this.nextIndexPeaks[r]>=t)return!1;let l=this.nextIndexPeaks[r]%e,{peaks:i,threshold:c}=v(o,r,l);if(i.length===0)return!1;for(let I of i){let f=s+I;this.nextIndexPeaks[c]=f+this.options.muteTimeInIndexes,this.validPeaks[c].push(f),this.options.debug&&a({message:"VALID_PEAK",data:{threshold:c,index:f}})}return!1},this.minValidThreshold)}};var T=class extends AudioWorkletProcessor{constructor(){super();this.realTimeBpmAnalyzer=new m;this.stopped=!1;this.aggregate=h(),this.port.addEventListener("message",this.onMessage.bind(this)),this.port.start()}onMessage(e){e.data.message==="ASYNC_CONFIGURATION"&&(console.log("[processor.onMessage] ASYNC_CONFIGURATION"),this.realTimeBpmAnalyzer.setAsyncConfiguration(e.data.parameters)),e.data.message==="RESET"&&(console.log("[processor.onMessage] RESET"),this.aggregate=h(),this.stopped=!1,this.realTimeBpmAnalyzer.reset()),e.data.message==="STOP"&&(console.log("[processor.onMessage] STOP"),this.aggregate=h(),this.stopped=!0,this.realTimeBpmAnalyzer.reset())}process(e,s,t){let a=e[0][0];if(this.stopped||!a)return!0;let{isBufferFull:r,buffer:l,bufferSize:i}=this.aggregate(a);return r&&this.realTimeBpmAnalyzer.analyzeChunck(l,sampleRate,i,c=>{this.port.postMessage(c)}).catch(c=>{console.error(c)}),!0}};registerProcessor(x,T);var Q={};})();
//# sourceMappingURL=realtime-bpm-processor.js.map
`;async function c(o,t=.2,s=.95,n=.05){let e=s;do if(e-=n,await o(e))break;while(e>t)}function g(o=.2,t=.95,s=.05){let n={},e=t;do e-=s,n[e.toString()]=[];while(e>o);return n}function v(o=.2,t=.95,s=.05){let n={},e=t;do e-=s,n[e.toString()]=0;while(e>o);return n}function P(o,t,s=0,n=1e4){let e=[],{length:a}=o;for(let i=s;i<a;i+=1)o[i]>t&&(e.push(i),i+=n);return{peaks:e,threshold:t}}async function E(o){let t=[],s=0;return await c(async n=>{let{peaks:e}=P(o,n);return e.length<15?!1:(t=e,s=n,!0)}),{peaks:t,threshold:s}}function M(o){let t=o.createBiquadFilter();t.type="lowpass",t.frequency.value=150,t.Q.value=1;let s=o.createBiquadFilter();return s.type="highpass",s.frequency.value=100,s.Q.value=1,{lowpass:t,highpass:s}}async function I(o,t){let s=15,n=!1,e=.2;if(await c(async a=>n?!0:(o[a].length>s&&(n=!0,e=a),!1)),n&&e){let a=b(o[e]),i=B(t,a);return{bpm:A(i),threshold:e}}return{bpm:[],threshold:e}}function A(o,t=5){return o.sort((s,n)=>n.count-s.count).splice(0,t)}function b(o){let t=[];for(let s=0;s<o.length;s++)for(let n=0;n<10;n++){let e=o[s],a=s+n,i=o[a]-e;if(!t.some(r=>r.interval===i?(r.count+=1,r.count):!1)){let r={interval:i,count:1};t.push(r)}}return t}function B(o,t){let s=[];for(let n of t){if(n.interval===0)continue;n.interval=Math.abs(n.interval);let e=60/(n.interval/o);for(;e<90;)e*=2;for(;e>180;)e/=2;if(e=Math.round(e),!s.some(i=>i.tempo===e?(i.count+=n.count,i.count):!1)){let i={tempo:e,count:n.count,confidence:0};s.push(i)}}return s}async function R(o){let t=o.getChannelData(0),{peaks:s}=await E(t),n=b(s),e=B(o.sampleRate,n);return A(e,t.length)}var l={minValidThreshold:()=>.2,validPeaks:()=>g(),nextIndexPeaks:()=>v(),skipIndexes:()=>1,effectiveBufferTime:()=>0},V=class{constructor(){this.options={continuousAnalysis:!1,stabilizationTime:2e4,muteTimeInIndexes:1e4,debug:!1};this.minValidThreshold=l.minValidThreshold();this.validPeaks=l.validPeaks();this.nextIndexPeaks=l.nextIndexPeaks();this.skipIndexes=l.skipIndexes();this.effectiveBufferTime=l.effectiveBufferTime();this.computedStabilizationTimeInSeconds=0;this.updateComputedValues()}setAsyncConfiguration(t){Object.assign(this.options,t),this.updateComputedValues()}updateComputedValues(){this.computedStabilizationTimeInSeconds=this.options.stabilizationTime/1e3}reset(){this.minValidThreshold=l.minValidThreshold(),this.validPeaks=l.validPeaks(),this.nextIndexPeaks=l.nextIndexPeaks(),this.skipIndexes=l.skipIndexes(),this.effectiveBufferTime=l.effectiveBufferTime()}async clearValidPeaks(t){this.minValidThreshold=Number.parseFloat(t.toFixed(2)),await c(async s=>(s<t&&this.validPeaks[s]!==void 0&&(delete this.validPeaks[s],delete this.nextIndexPeaks[s]),!1))}async analyzeChunck(t,s,n,e){this.options.debug&&e({message:"ANALYZE_CHUNK",data:t}),this.effectiveBufferTime+=n;let a=n*this.skipIndexes,i=a-n;await this.findPeaks(t,n,i,a,e),this.skipIndexes++;let d=await I(this.validPeaks,s),{threshold:r}=d;e({message:"BPM",result:d}),this.minValidThreshold<r&&(e({message:"BPM_STABLE",result:d}),await this.clearValidPeaks(r)),this.options.continuousAnalysis&&this.effectiveBufferTime/s>this.computedStabilizationTimeInSeconds&&(this.reset(),e({message:"ANALYZER_RESETED"}))}async findPeaks(t,s,n,e,a){await c(async i=>{if(this.nextIndexPeaks[i]>=e)return!1;let d=this.nextIndexPeaks[i]%s,{peaks:r,threshold:h}=P(t,i,d);if(r.length===0)return!1;for(let w of r){let f=n+w;this.nextIndexPeaks[h]=f+this.options.muteTimeInIndexes,this.validPeaks[h].push(f),this.options.debug&&a({message:"VALID_PEAK",data:{threshold:h,index:f}})}return!1},this.minValidThreshold)}};async function Y(o){let t=await O(o,x);return await o.resume(),t}async function O(o,t){let s=new Blob([T],{type:"application/javascript"}),n=URL.createObjectURL(s);return await o.audioWorklet.addModule(n),new AudioWorkletNode(o,t)}export{V as RealTimeBpmAnalyzer,R as analyzeFullBuffer,Y as createRealTimeBpmProcessor,M as getBiquadFilters};
//# sourceMappingURL=index.esm.js.map
